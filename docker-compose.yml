version: "3.9"

services:
  ci:
    build:
      context: .
      dockerfile: Dockerfile.ci
    volumes:
      - ./:/workspace
      - /var/run/docker.sock:/var/run/docker.sock
    environment:
      DOCKER_HOST: unix:///var/run/docker.sock
      TESTCONTAINERS_RYUK_DISABLED: "true"
    network_mode: host

  postgresql:
    image: postgres:16
    environment:
      POSTGRES_DB: scrapper
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "postgres"]
      interval: 1s
      retries: 30

  liquibase:
    image: liquibase/liquibase:4.25
    depends_on:
      postgresql:
        condition: service_healthy
    command:
      - --changeLogFile=master.xml
      - --driver=org.postgresql.Driver
      - --url=jdbc:postgresql://postgresql:5432/scrapper
      - --username=postgres
      - --password=postgres
      - update
    volumes:
      - ./migrations:/liquibase/changelog

  scrapper:
    build:
      context: ./scrapper
      dockerfile: scrapper.Dockerfile
    depends_on:
      postgresql:
        condition: service_healthy
      liquibase:
        condition: service_completed_successfully
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgresql:5432/scrapper
      APP_BOT_BASE_URL_BASE_URL: http://bot:8090
    ports:
      - "8080:8080"

  bot:
    build:
      context: ./bot
      dockerfile: bot.Dockerfile
    depends_on:
      scrapper:
        condition: service_started
    environment:
      TOKEN: ${TOKEN}
      APP_SCRAPPER_BASE_URL_BASE_URL: http://scrapper:8080
    ports:
      - "8090:8090"
